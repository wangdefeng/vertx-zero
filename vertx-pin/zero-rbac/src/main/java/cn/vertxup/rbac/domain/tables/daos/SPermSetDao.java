/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.rbac.domain.tables.daos;


import cn.vertxup.rbac.domain.tables.SPermSet;
import cn.vertxup.rbac.domain.tables.records.SPermSetRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SPermSetDao extends DAOImpl<SPermSetRecord, cn.vertxup.rbac.domain.tables.pojos.SPermSet, String> implements VertxDAO<cn.vertxup.rbac.domain.tables.records.SPermSetRecord,cn.vertxup.rbac.domain.tables.pojos.SPermSet,java.lang.String> {

    /**
     * Create a new SPermSetDao without any configuration
     */
    public SPermSetDao() {
        super(SPermSet.S_PERM_SET, cn.vertxup.rbac.domain.tables.pojos.SPermSet.class);
    }

    /**
     * Create a new SPermSetDao with an attached configuration
     */
    public SPermSetDao(Configuration configuration) {
        super(SPermSet.S_PERM_SET, cn.vertxup.rbac.domain.tables.pojos.SPermSet.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.rbac.domain.tables.pojos.SPermSet object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPermSet> fetchByKey(String... values) {
        return fetch(SPermSet.S_PERM_SET.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.rbac.domain.tables.pojos.SPermSet fetchOneByKey(String value) {
        return fetchOne(SPermSet.S_PERM_SET.KEY, value);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPermSet> fetchByName(String... values) {
        return fetch(SPermSet.S_PERM_SET.NAME, values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPermSet> fetchByCode(String... values) {
        return fetch(SPermSet.S_PERM_SET.CODE, values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPermSet> fetchByType(String... values) {
        return fetch(SPermSet.S_PERM_SET.TYPE, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPermSet> fetchBySigma(String... values) {
        return fetch(SPermSet.S_PERM_SET.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPermSet> fetchByLanguage(String... values) {
        return fetch(SPermSet.S_PERM_SET.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPermSet> fetchByActive(Boolean... values) {
        return fetch(SPermSet.S_PERM_SET.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPermSet> fetchByComment(String... values) {
        return fetch(SPermSet.S_PERM_SET.COMMENT, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPermSet> fetchByMetadata(String... values) {
        return fetch(SPermSet.S_PERM_SET.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPermSet> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(SPermSet.S_PERM_SET.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPermSet> fetchByCreatedBy(String... values) {
        return fetch(SPermSet.S_PERM_SET.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPermSet> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(SPermSet.S_PERM_SET.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPermSet> fetchByUpdatedBy(String... values) {
        return fetch(SPermSet.S_PERM_SET.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPermSet>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(SPermSet.S_PERM_SET.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.rbac.domain.tables.pojos.SPermSet> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPermSet>> fetchByNameAsync(List<String> values) {
        return fetchAsync(SPermSet.S_PERM_SET.NAME,values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPermSet>> fetchByCodeAsync(List<String> values) {
        return fetchAsync(SPermSet.S_PERM_SET.CODE,values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPermSet>> fetchByTypeAsync(List<String> values) {
        return fetchAsync(SPermSet.S_PERM_SET.TYPE,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPermSet>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(SPermSet.S_PERM_SET.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPermSet>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(SPermSet.S_PERM_SET.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPermSet>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(SPermSet.S_PERM_SET.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPermSet>> fetchByCommentAsync(List<String> values) {
        return fetchAsync(SPermSet.S_PERM_SET.COMMENT,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPermSet>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(SPermSet.S_PERM_SET.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPermSet>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(SPermSet.S_PERM_SET.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPermSet>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(SPermSet.S_PERM_SET.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPermSet>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(SPermSet.S_PERM_SET.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPermSet>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(SPermSet.S_PERM_SET.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
