/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.rbac.domain.tables.pojos;


import cn.vertxup.rbac.domain.tables.interfaces.ISPacket;

import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SPacket implements ISPacket {

    private static final long serialVersionUID = -58928827;

    private String        key;
    private String        pathId;
    private String        resourceId;
    private String        rowType;
    private String        rowField;
    private String        rowTpl;
    private String        rowTplMapping;
    private String        colType;
    private String        colConfig;
    private String        condTpl;
    private String        condTplMapping;
    private String        condConfig;
    private String        sigma;
    private String        language;
    private Boolean       active;
    private String        metadata;
    private LocalDateTime createdAt;
    private String        createdBy;
    private LocalDateTime updatedAt;
    private String        updatedBy;

    public SPacket() {}

    public SPacket(SPacket value) {
        this.key = value.key;
        this.pathId = value.pathId;
        this.resourceId = value.resourceId;
        this.rowType = value.rowType;
        this.rowField = value.rowField;
        this.rowTpl = value.rowTpl;
        this.rowTplMapping = value.rowTplMapping;
        this.colType = value.colType;
        this.colConfig = value.colConfig;
        this.condTpl = value.condTpl;
        this.condTplMapping = value.condTplMapping;
        this.condConfig = value.condConfig;
        this.sigma = value.sigma;
        this.language = value.language;
        this.active = value.active;
        this.metadata = value.metadata;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
    }

    public SPacket(
        String        key,
        String        pathId,
        String        resourceId,
        String        rowType,
        String        rowField,
        String        rowTpl,
        String        rowTplMapping,
        String        colType,
        String        colConfig,
        String        condTpl,
        String        condTplMapping,
        String        condConfig,
        String        sigma,
        String        language,
        Boolean       active,
        String        metadata,
        LocalDateTime createdAt,
        String        createdBy,
        LocalDateTime updatedAt,
        String        updatedBy
    ) {
        this.key = key;
        this.pathId = pathId;
        this.resourceId = resourceId;
        this.rowType = rowType;
        this.rowField = rowField;
        this.rowTpl = rowTpl;
        this.rowTplMapping = rowTplMapping;
        this.colType = colType;
        this.colConfig = colConfig;
        this.condTpl = condTpl;
        this.condTplMapping = condTplMapping;
        this.condConfig = condConfig;
        this.sigma = sigma;
        this.language = language;
        this.active = active;
        this.metadata = metadata;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

    @Override
    public String getKey() {
        return this.key;
    }

    @Override
    public SPacket setKey(String key) {
        this.key = key;
        return this;
    }

    @Override
    public String getPathId() {
        return this.pathId;
    }

    @Override
    public SPacket setPathId(String pathId) {
        this.pathId = pathId;
        return this;
    }

    @Override
    public String getResourceId() {
        return this.resourceId;
    }

    @Override
    public SPacket setResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    @Override
    public String getRowType() {
        return this.rowType;
    }

    @Override
    public SPacket setRowType(String rowType) {
        this.rowType = rowType;
        return this;
    }

    @Override
    public String getRowField() {
        return this.rowField;
    }

    @Override
    public SPacket setRowField(String rowField) {
        this.rowField = rowField;
        return this;
    }

    @Override
    public String getRowTpl() {
        return this.rowTpl;
    }

    @Override
    public SPacket setRowTpl(String rowTpl) {
        this.rowTpl = rowTpl;
        return this;
    }

    @Override
    public String getRowTplMapping() {
        return this.rowTplMapping;
    }

    @Override
    public SPacket setRowTplMapping(String rowTplMapping) {
        this.rowTplMapping = rowTplMapping;
        return this;
    }

    @Override
    public String getColType() {
        return this.colType;
    }

    @Override
    public SPacket setColType(String colType) {
        this.colType = colType;
        return this;
    }

    @Override
    public String getColConfig() {
        return this.colConfig;
    }

    @Override
    public SPacket setColConfig(String colConfig) {
        this.colConfig = colConfig;
        return this;
    }

    @Override
    public String getCondTpl() {
        return this.condTpl;
    }

    @Override
    public SPacket setCondTpl(String condTpl) {
        this.condTpl = condTpl;
        return this;
    }

    @Override
    public String getCondTplMapping() {
        return this.condTplMapping;
    }

    @Override
    public SPacket setCondTplMapping(String condTplMapping) {
        this.condTplMapping = condTplMapping;
        return this;
    }

    @Override
    public String getCondConfig() {
        return this.condConfig;
    }

    @Override
    public SPacket setCondConfig(String condConfig) {
        this.condConfig = condConfig;
        return this;
    }

    @Override
    public String getSigma() {
        return this.sigma;
    }

    @Override
    public SPacket setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    @Override
    public String getLanguage() {
        return this.language;
    }

    @Override
    public SPacket setLanguage(String language) {
        this.language = language;
        return this;
    }

    @Override
    public Boolean getActive() {
        return this.active;
    }

    @Override
    public SPacket setActive(Boolean active) {
        this.active = active;
        return this;
    }

    @Override
    public String getMetadata() {
        return this.metadata;
    }

    @Override
    public SPacket setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    @Override
    public SPacket setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    @Override
    public SPacket setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    @Override
    public SPacket setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    @Override
    public SPacket setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SPacket (");

        sb.append(key);
        sb.append(", ").append(pathId);
        sb.append(", ").append(resourceId);
        sb.append(", ").append(rowType);
        sb.append(", ").append(rowField);
        sb.append(", ").append(rowTpl);
        sb.append(", ").append(rowTplMapping);
        sb.append(", ").append(colType);
        sb.append(", ").append(colConfig);
        sb.append(", ").append(condTpl);
        sb.append(", ").append(condTplMapping);
        sb.append(", ").append(condConfig);
        sb.append(", ").append(sigma);
        sb.append(", ").append(language);
        sb.append(", ").append(active);
        sb.append(", ").append(metadata);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ISPacket from) {
        setKey(from.getKey());
        setPathId(from.getPathId());
        setResourceId(from.getResourceId());
        setRowType(from.getRowType());
        setRowField(from.getRowField());
        setRowTpl(from.getRowTpl());
        setRowTplMapping(from.getRowTplMapping());
        setColType(from.getColType());
        setColConfig(from.getColConfig());
        setCondTpl(from.getCondTpl());
        setCondTplMapping(from.getCondTplMapping());
        setCondConfig(from.getCondConfig());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ISPacket> E into(E into) {
        into.from(this);
        return into;
    }

    public SPacket(io.vertx.core.json.JsonObject json) {
        fromJson(json);
    }
}
