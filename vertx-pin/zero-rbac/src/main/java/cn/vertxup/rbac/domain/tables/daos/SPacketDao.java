/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.rbac.domain.tables.daos;


import cn.vertxup.rbac.domain.tables.SPacket;
import cn.vertxup.rbac.domain.tables.records.SPacketRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SPacketDao extends DAOImpl<SPacketRecord, cn.vertxup.rbac.domain.tables.pojos.SPacket, String> implements VertxDAO<cn.vertxup.rbac.domain.tables.records.SPacketRecord,cn.vertxup.rbac.domain.tables.pojos.SPacket,java.lang.String> {

    /**
     * Create a new SPacketDao without any configuration
     */
    public SPacketDao() {
        super(SPacket.S_PACKET, cn.vertxup.rbac.domain.tables.pojos.SPacket.class);
    }

    /**
     * Create a new SPacketDao with an attached configuration
     */
    public SPacketDao(Configuration configuration) {
        super(SPacket.S_PACKET, cn.vertxup.rbac.domain.tables.pojos.SPacket.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.rbac.domain.tables.pojos.SPacket object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByKey(String... values) {
        return fetch(SPacket.S_PACKET.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.rbac.domain.tables.pojos.SPacket fetchOneByKey(String value) {
        return fetchOne(SPacket.S_PACKET.KEY, value);
    }

    /**
     * Fetch records that have <code>PATH_ID IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByPathId(String... values) {
        return fetch(SPacket.S_PACKET.PATH_ID, values);
    }

    /**
     * Fetch records that have <code>RESOURCE_ID IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByResourceId(String... values) {
        return fetch(SPacket.S_PACKET.RESOURCE_ID, values);
    }

    /**
     * Fetch records that have <code>ROW_TYPE IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByRowType(String... values) {
        return fetch(SPacket.S_PACKET.ROW_TYPE, values);
    }

    /**
     * Fetch records that have <code>ROW_FIELD IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByRowField(String... values) {
        return fetch(SPacket.S_PACKET.ROW_FIELD, values);
    }

    /**
     * Fetch records that have <code>ROW_TPL IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByRowTpl(String... values) {
        return fetch(SPacket.S_PACKET.ROW_TPL, values);
    }

    /**
     * Fetch records that have <code>ROW_TPL_MAPPING IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByRowTplMapping(String... values) {
        return fetch(SPacket.S_PACKET.ROW_TPL_MAPPING, values);
    }

    /**
     * Fetch records that have <code>COL_TYPE IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByColType(String... values) {
        return fetch(SPacket.S_PACKET.COL_TYPE, values);
    }

    /**
     * Fetch records that have <code>COL_CONFIG IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByColConfig(String... values) {
        return fetch(SPacket.S_PACKET.COL_CONFIG, values);
    }

    /**
     * Fetch records that have <code>COND_TPL IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByCondTpl(String... values) {
        return fetch(SPacket.S_PACKET.COND_TPL, values);
    }

    /**
     * Fetch records that have <code>COND_TPL_MAPPING IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByCondTplMapping(String... values) {
        return fetch(SPacket.S_PACKET.COND_TPL_MAPPING, values);
    }

    /**
     * Fetch records that have <code>COND_CONFIG IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByCondConfig(String... values) {
        return fetch(SPacket.S_PACKET.COND_CONFIG, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchBySigma(String... values) {
        return fetch(SPacket.S_PACKET.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByLanguage(String... values) {
        return fetch(SPacket.S_PACKET.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByActive(Boolean... values) {
        return fetch(SPacket.S_PACKET.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByMetadata(String... values) {
        return fetch(SPacket.S_PACKET.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(SPacket.S_PACKET.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByCreatedBy(String... values) {
        return fetch(SPacket.S_PACKET.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(SPacket.S_PACKET.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchByUpdatedBy(String... values) {
        return fetch(SPacket.S_PACKET.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.rbac.domain.tables.pojos.SPacket> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>PATH_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByPathIdAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.PATH_ID,values);
    }

    /**
     * Fetch records that have <code>RESOURCE_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByResourceIdAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.RESOURCE_ID,values);
    }

    /**
     * Fetch records that have <code>ROW_TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByRowTypeAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.ROW_TYPE,values);
    }

    /**
     * Fetch records that have <code>ROW_FIELD IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByRowFieldAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.ROW_FIELD,values);
    }

    /**
     * Fetch records that have <code>ROW_TPL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByRowTplAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.ROW_TPL,values);
    }

    /**
     * Fetch records that have <code>ROW_TPL_MAPPING IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByRowTplMappingAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.ROW_TPL_MAPPING,values);
    }

    /**
     * Fetch records that have <code>COL_TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByColTypeAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.COL_TYPE,values);
    }

    /**
     * Fetch records that have <code>COL_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByColConfigAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.COL_CONFIG,values);
    }

    /**
     * Fetch records that have <code>COND_TPL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByCondTplAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.COND_TPL,values);
    }

    /**
     * Fetch records that have <code>COND_TPL_MAPPING IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByCondTplMappingAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.COND_TPL_MAPPING,values);
    }

    /**
     * Fetch records that have <code>COND_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByCondConfigAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.COND_CONFIG,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(SPacket.S_PACKET.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(SPacket.S_PACKET.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(SPacket.S_PACKET.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.SPacket>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(SPacket.S_PACKET.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
